
;GEOS 1541 disk driver
;reassembled by Maciej 'YTM/Alliance' Witkowiak
;18-20.04.99

;This is the disk driver for 1541. It handles actions with the drive
;but also with all other IO - printer, ports etc. (InitForIO and
;DoneWithIO).
;I have little practice with coding the drive so the drive code is
;badly reassembled (all those DUNKS_) and may be hard to track.

;This source may be the skeleton for writing disk drivers for some
;unusual drives and expansions.

		;*=DISK_BASE

DriveAddy = $0300

_InitForIO		.word __InitForIO		;9000
_DoneWithIO		.word __DoneWithIO		;9002
_ExitTurbo		.word __ExitTurbo		;9004
_PurgeTurbo		.word __PurgeTurbo		;9006
_EnterTurbo		.word __EnterTurbo		;9008
_ChangeDiskDevice	.word __ChangeDiskDevice	;900a
_NewDisk		.word __NewDisk 		;900c
_ReadBlock		.word __ReadBlock		;900e
_WriteBlock		.word __WriteBlock		;9010
_VerWriteBlock		.word __VerWriteBlock		;9012
_OpenDisk		.word __OpenDisk		;9014
_GetBlock		.word __GetBlock		;9016
_PutBlock		.word __PutBlock		;9018
_GetDirHead		.word __GetDirHead		;901a
_PutDirHead		.word __PutDirHead		;901c
_GetFreeDirBlk		.word __GetFreeDirBlk		;901e
_CalcBlksFree		.word __CalcBlksFree		;9020
_FreeBlock		.word __FreeBlock		;9022
_SetNextFree		.word __SetNextFree		;9024
_FindBAMBit		.word __FindBAMBit		;9026
_NxtBlkAlloc		.word __NxtBlkAlloc		;9028
_BlkAlloc		.word __BlkAlloc		;902a
_ChkDkGEOS		.word __ChkDkGEOS		;902c
_SetGEOSDisk		.word __SetGEOSDisk		;902e

Get1stDirEntry		JMP _Get1stDirEntry		;9030
GetNxtDirEntry		JMP _GetNxtDirEntry		;9033
GetBorder		JMP _GetBorder			;9036
AddDirBlock		JMP _AddDirBlock		;9039
ReadBuff		JMP _ReadBuff			;903c
WriteBuff		JMP _WriteBuff			;903f
			JMP DUNK4_2			;9042
			JMP GetDOSError 		;9045
AllocateBlock		JMP _AllocateBlock		;9048
ReadLink		JMP _ReadLink			;904b

__GetDirHead					;904e
		JSR SetDirHead
		BNE __GetBlock
_ReadBuff	#LoadW r4, diskBlkBuf		;9053
__GetBlock	JSR EnterTurbo			;905b
		#bnex GetBlk0
		JSR InitForIO
		JSR ReadBlock
		JSR DoneWithIO
GetBlk0 	RTS				;906a

__PutDirHead					;906b
		JSR SetDirHead
		BNE __PutBlock
_WriteBuff	#LoadW r4, diskBlkBuf		;9070
__PutBlock	JSR EnterTurbo			;9078
		#bnex PutBlk1
		JSR InitForIO
		JSR WriteBlock
		#bnex PutBlk0
		JSR VerWriteBlock
PutBlk0 	JSR DoneWithIO			;908a
PutBlk1 	RTS				;908d

SetDirHead	#LoadB r1L, DIR_TRACK		;908e
		#LoadB r1H, 0
		STA r4L
		#LoadB r4H, (>curDirHead)
		RTS

DUNK1		#bbrf 6, curType, DUNK1_1	;909d
		JSR DoCacheVerify
		BEQ DUNK1_2
DUNK1_1 	LDA #0				;90a7
		STA errCount
		LDX #2
		LDA r1L
		BEQ DUNK1_2
		CMP #N_TRACKS+1
		BCS DUNK1_2
		SEC
		RTS
DUNK1_2 	CLC				;90b8
		RTS

__OpenDisk					;90ba
		LDY curDrive
		LDA _driveType,y
		STA tmpDriveType
		AND #%10111111
		STA _driveType,y
		JSR NewDisk
		#bnex OpenDsk1
		JSR GetDirHead
		#bnex OpenDsk1
		#bbrf 6, tmpDriveType, OpenDsk0
		JSR DoCacheVerify
		BEQ OpenDsk0
		JSR DoClearCache
		JSR SetDirHead
		JSR DoCacheWrite
OpenDsk0	#LoadW r5, curDirHead		;90e7
		JSR ChkDkGEOS
		#LoadW r4, curDirHead+OFF_DISK_NAME
		LDX #r5
		JSR GetPtrCurDkNm
		LDX #r4
		LDY #r5
		LDA #18
		JSR CopyFString
		LDX #0
OpenDsk1	LDA tmpDriveType		;910a
		LDY curDrive
		STA _driveType,y
		RTS
tmpDriveType	.byte 0 			;9114

__BlkAlloc					;9115
		LDY #1
		STY r3L
		DEY
		STY r3H
__NxtBlkAlloc	#PushW r9			;911c
		#PushW r3
		#LoadW r3, $00fe
		LDX #r2
		LDY #r3
		JSR Ddiv
		LDA r8L
		BEQ BlkAlc0
		INC r2L
		BNE *+4
		INC r2H
BlkAlc0 	#LoadW r5, curDirHead		;9141
		JSR CalcBlksFree
		#PopW r3
		LDX #INSUFF_SPACE
		#CmpW r2, r4
		BEQ BlkAlc1
		BCS BlkAlc4
BlkAlc1 	#MoveW r6, r4			;9162
		#MoveW r2, r5
BlkAlc2 	JSR SetNextFree 		;9172
		#bnex BlkAlc4
		LDY #0
		LDA r3L
		STA (r4),y
		INY
		LDA r3H
		STA (r4),y
		#AddVW 2, r4
		LDA r5L
		BNE *+4
		DEC r5H
		DEC r5L
		LDA r5L
		ORA r5H
		BNE BlkAlc2
		LDY #0
		TYA
		STA (r4),y
		INY
		LDA r8L
		BNE BlkAlc3
		LDA #$fe
BlkAlc3 	CLC				;91a8
		ADC #1
		STA (r4),y
		LDX #0
BlkAlc4 	#PopW r9			;91af
		RTS

_Get1stDirEntry 				;91b6
		#LoadB r1L, DIR_TRACK
		#LoadB r1H, 1
		JSR ReadBuff
		#LoadW r5, diskBlkBuf+FRST_FILE_ENTRY
		LDA #0
		STA borderFlag
		RTS

_GetNxtDirEntry 				;91cf
		LDX #0
		LDY #0
		#AddVW $20, r5
		#CmpWI r5, $80ff
		BCC GNDirEntry1
		LDY #$ff
		#MoveW diskBlkBuf, r1
		BNE GNDirEntry0
		LDA borderFlag
		BNE GNDirEntry1
		LDA #$ff
		STA borderFlag
		JSR GetBorder
		#bnex GNDirEntry1
		TYA
		BNE GNDirEntry1
GNDirEntry0	JSR ReadBuff			;920b
		LDY #0
		#LoadW r5, diskBlkBuf+FRST_FILE_ENTRY
GNDirEntry1	RTS				;9218

_GetBorder					;9219
		JSR GetDirHead
		#bnex GetBord2
		#LoadW r5, curDirHead
		JSR ChkDkGEOS
		BNE GetBord0
		LDY #$ff
		BNE GetBord1
GetBord0	#MoveW curDirHead+OFF_OP_TR_SC, r1	;9230
		LDY #0
GetBord1	LDX #0				;923c
GetBord2	RTS				;923e

__ChkDkGEOS					;923f
		LDY #OFF_GS_ID
		LDX #0
		#LoadB isGEOS, FALSE
ChkDkG0 	LDA (r5),y			;9248
		CMP GEOSDiskID,x
		BNE ChkDkG1
		INY
		INX
		CPX #11
		BNE ChkDkG0
		#LoadB isGEOS, $ff
ChkDkG1 	LDA isGEOS			;925a
		RTS

GEOSDiskID	.text "GEOS format V1.0",NULL	;925e

__GetFreeDirBlk 				;926f
		PHP
		SEI
		#PushB r6L
		#PushW r2
		LDX r10L
		INX
		STX r6L
		#LoadB r1L, DIR_TRACK
		#LoadB r1H, 1
GFDirBlk0	JSR ReadBuff			;9287
GFDirBlk1	#bnex GFDirBlk5 		;928a
		DEC r6L
		BEQ GFDirBlk3
GFDirBlk11	LDA diskBlkBuf			;9291
		BNE GFDirBlk2
		JSR AddDirBlock
		#bra GFDirBlk1
GFDirBlk2	STA r1L 			;929c
		#MoveB diskBlkBuf+1, r1H
		#bra GFDirBlk0
GFDirBlk3	LDY #FRST_FILE_ENTRY		;92a6
		LDX #0
GFDirBlk4	LDA diskBlkBuf,y		;92aa
		BEQ GFDirBlk5
		TYA
		#addv $20
		TAY
		BCC GFDirBlk4
		#LoadB r6L, 1
		LDX #FULL_DIRECTORY
		LDY r10L
		INY
		STY r10L
		CPY #$12
		BCC GFDirBlk11
GFDirBlk5	#PopW r2			;92c5
		#PopB r6L
		PLP
		RTS

_AddDirBlock					;92d0
		#PushW r6
		LDY #$48
		LDX #4
		LDA curDirHead,y
		BEQ ADirBlk0
		#MoveW r1, r3
		JSR SetNextFree
		#MoveW r3, diskBlkBuf
		JSR WriteBuff
		#bnex ADirBlk0
		#MoveW r3, r1
		JSR ClearAndWrite
ADirBlk0	#PopW r6			;9305
		RTS

ClearAndWrite	LDA #0				;930c
		TAY
CAndWr0 	STA diskBlkBuf,y		;930f
		INY
		BNE CAndWr0
		DEY
		STY diskBlkBuf+1
		JMP WriteBuff

__SetNextFree					;931c
		LDA r3H
		#add interleave
		STA r6H
		#MoveB r3L, r6L
		CMP #25
		BCC SNxtFree0
		DEC r6H
SNxtFree0	CMP #DIR_TRACK			;932e
		BEQ SNxtFree1
SNxtFree00	LDA r6L 			;9332
		CMP #DIR_TRACK
		BEQ SNxtFree3
SNxtFree1	ASL A				;9338
		ASL A
		TAX
		LDA curDirHead,x
		BEQ SNxtFree3
		LDA r6L
		JSR SNxtFreeHelp
		LDA SecScTab,x
		STA r7L
		TAY
SNxtFree2	JSR SNxtFreeHelp2		;934b
		BEQ SNxtFree4
		INC r6H
		DEY
		BNE SNxtFree2
SNxtFree3	INC r6L 			;9355
		#CmpBI r6L, N_TRACKS+1
		BCS SNxtFree5
		#sub r3L
		STA r6H
		ASL A
		ADC #4
		ADC interleave
		STA r6H
		#bra SNxtFree00
SNxtFree4	#MoveW r6, r3			;936d
		LDX #0
		RTS
SNxtFree5	LDX #INSUFF_SPACE		;9378
		RTS

SNxtFreeHelp	LDX #0				;937b
SNFHlp0 	CMP SecTrTab,x			;937d
		BCC SNFHlp1
		INX
		BNE SNFHlp0
SNFHlp1 	RTS				;9385

SecTrTab	.byte 18, 25, 31, 36		;9386
SecScTab	.byte 21, 19, 18, 17		;938a

SNxtFreeHelp2	LDA r6H 			;938e
SNFHlp2_1	CMP r7L 			;9390
		BCC SNFHlp2_2
		#sub r7L
		#bra SNFHlp2_1
SNFHlp2_2	STA r6H 			;939a

_AllocateBlock	JSR FindBAMBit			;939c
		BEQ SNFHlp2_3
		LDA r8H
		EOR #$ff
		AND curDirHead,x
		STA curDirHead,x
		LDX r7H
		DEC curDirHead,x
		LDX #0
		RTS
SNFHlp2_3	LDX #BAD_BAM			;93b3
		RTS

__FindBAMBit					;93b6
		LDA r6L
		ASL A
		ASL A
		STA r7H
		LDA r6H
		AND #%00000111
		TAX
		LDA FBBBitTab,x
		STA r8H
		LDA r6H
		LSR A
		LSR A
		LSR A
		SEC
		ADC r7H
		TAX
		LDA curDirHead,x
		AND r8H
		RTS

FBBBitTab	.byte $01, $02, $04, $08	;93d5
		.byte $10, $20, $40, $80

__FreeBlock					;93dd
		JSR FindBAMBit
		BNE FreeBlk0
		LDA r8H
		EOR curDirHead,x
		STA curDirHead,x
		LDX r7H
		INC curDirHead,x
		LDX #0
		RTS
FreeBlk0	LDX #BAD_BAM			;93f2
		RTS

__CalcBlksFree					;93f5
		#LoadW r4, 0
		LDY #OFF_TO_BAM
CBlksFre0	LDA (r5),y			;93fd
		#add r4L
		STA r4L
		BCC *+4
		INC r4H
CBlksFre1	TYA				;94f8
		CLC
		ADC #4
		TAY
		CPY #$48
		BEQ CBlksFre1
		CPY #$90
		BNE CBlksFre0
		#LoadW r3, $0298
		RTS

__SetGEOSDisk					;941e
		JSR GetDirHead
		#bnex SetGDisk2
		#LoadW r5, curDirHead
		JSR CalcBlksFree
		LDX #INSUFF_SPACE
		LDA r4L
		ORA r4H
		BEQ SetGDisk2
		#LoadB r3L, DIR_TRACK+1
		#LoadB r3H, 0
		JSR SetNextFree
		#beqx SetGDisk0
		#LoadB r3L, 1
		JSR SetNextFree
		#bnex SetGDisk2
SetGDisk0	#MoveW r3, r1			;944f
		JSR ClearAndWrite
		#bnex SetGDisk2
		#MoveW r1, curDirHead+OFF_OP_TR_SC
		LDY #OFF_GS_ID+15
		LDX #15
SetGDisk1	LDA GEOSDiskID,x		;946b
		STA curDirHead,y
		DEY
		DEX
		BPL SetGDisk1
		JSR PutDirHead
SetGDisk2	RTS				;9478

__InitForIO					;9479
		PHP
		PLA
		STA tmpPS
		SEI
		LDA CPU_DATA
		STA tmpCPU_DATA
		#LoadB CPU_DATA, $36
		LDA grirqen
		STA tmpgrirqen
		LDA clkreg
		STA tmpclkreg
		LDY #0
		STY clkreg
		STY grirqen
		LDA #%01111111
		STA grirq
		STA cia1base+13
		STA cia2base+13
		LDA #>D_IRQHandler
		STA irqvec+1
		LDA #<D_IRQHandler
		STA irqvec
		LDA #>D_NMIHandler
		STA nmivec+1
		LDA #<D_NMIHandler
		STA nmivec
		LDA #%00111111
		STA cia2base+2
		LDA mobenble
		STA tmpmobenble
		STY mobenble
		STY cia2base+5
		INY
		STY cia2base+4
		#LoadB cia2base+13, %10000001
		#LoadB cia2base+14, %00001001
		LDY #$2c
IniForIO0	LDA rasreg			;94dc
		CMP TURBO_DD00_CPY
		BEQ IniForIO0
		STA TURBO_DD00_CPY
		DEY
		BNE IniForIO0
		LDA cia2base
		AND #%00000111
		STA TURBO_DD00
		STA tmpDD00
		ORA #%00110000
		STA TURBO_DD00_CPY
		LDA TURBO_DD00
		ORA #%00010000
		STA tmpDD00_2
		RTS

D_IRQHandler	PLA				;94fe
		TAY
		PLA
		TAX
		PLA
D_NMIHandler	RTI				;9503

__DoneWithIO	SEI				;9504
		LDA tmpclkreg
		STA clkreg
		LDA tmpmobenble
		STA mobenble
		#LoadB cia2base+13, %01111111
		LDA cia2base+13
		LDA tmpgrirqen
		STA grirqen
		LDA tmpCPU_DATA
		STA CPU_DATA
		LDA tmpPS
		PHA
		PLP
		RTS
;952a
NibbleTab	.byte $0f, $07, $0d, $05, $0b, $03, $09, $01
		.byte $0e, $06, $0c, $04, $0a, $02, $08
NibbleTab2	.byte $00			;9539
		.byte $80, $20, $a0, $40, $c0, $60, $e0, $10
		.byte $90, $30, $b0, $50, $d0, $70, $f0

Hst_RecvByte	JSR GetSync			;9549
		PHA
		PLA
		PHA
		PLA
		STY z8d
Hst_RecvByte_0	SEC				;9552
Hst_RecvByte_1	LDA rasreg			;9553
		SBC #$31
		BCC Hst_RecvByte_2
		AND #6
		BEQ Hst_RecvByte_1
Hst_RecvByte_2	#MoveB TURBO_DD00_CPY, cia2base ;955e
		LDA z8b
		#MoveB TURBO_DD00, cia2base
		DEC z8d
		NOP
		NOP
		NOP
		LDA cia2base
		LSR A
		LSR A
		NOP
		ORA cia2base
		LSR A
		LSR A
		LSR A
		LSR A
		LDY cia2base
		TAX
		TYA
		LSR A
		LSR A
		ORA cia2base
		AND #%11110000
		ORA NibbleTab,x
		LDY z8d
		STA (z8b),y
		BNE Hst_RecvByte_0
Hst_RecvByte_3 	LDX tmpDD00_2			;9591
		STX cia2base
		RTS

Hst_SendByte	JSR GetSync			;9598
		TYA
		PHA
		LDY #0
		JSR Hst_SendByte_01
		PLA
		TAY
		JSR GetSync
Hst_SendByte_0	DEY				;95a7
		LDA (z8b),y
		LDX TURBO_DD00
		STX cia2base
Hst_SendByte_01 TAX				;95af
		AND #%00001111
		STA z8d
		SEC
Hst_SendByte_1	LDA rasreg			;95b5
		SBC #$31
		BCC Hst_SendByte_2
		AND #6
		BEQ Hst_SendByte_1
Hst_SendByte_2	TXA				;95c0
		LDX TURBO_DD00_CPY
		STX cia2base
		AND #%11110000
		ORA TURBO_DD00
		STA cia2base
		ROR A
		ROR A
		AND #%11110000
		ORA tmpDD00
		STA cia2base
		LDX z8d
		LDA NibbleTab2,x
		ORA TURBO_DD00
		STA cia2base
		ROR A
		ROR A
		AND #%11110000
		ORA TURBO_DD00
		CPY #0
		STA cia2base
		BNE Hst_SendByte_0
		NOP
		NOP
		BEQ Hst_RecvByte_3

SendDOSCmd	STX z8c 			;95f2
		STA z8b
		#LoadB STATUS, 0
		LDA curDrive
		JSR $ffb1
		#bbsf 7, STATUS, SndDOSCmd1
		LDA #$ff
		JSR $ff93
		#bbsf 7, STATUS, SndDOSCmd1
		LDY #0
SndDOSCmd0	LDA (z8b),y			;960f
		JSR $ffa8
		INY
		CPY #5
		BCC SndDOSCmd0
		LDX #0
		RTS
SndDOSCmd1	JSR $ffae			;961c
		LDX #DEV_NOT_FOUND
		RTS

DUNK4		STX z8c 			;9622
		STA z8b
		LDY #2
		BNE DUNK4_3
DUNK4_1 	STX z8c 			;962a
		STA z8b
DUNK4_2 	LDY #4				;962e
		LDA r1H
		STA DTrkSec+1
		LDA r1L
		STA DTrkSec
DUNK4_3 	LDA z8c				;963a
		STA DExeProc+1
		LDA z8b
		STA DExeProc
		LDA #>DExeProc
		STA z8c
		LDA #<DExeProc
		STA z8b
		JMP Hst_SendByte

DUNK5		LDY #1				;964f
		JSR Hst_RecvByte
		PHA
		TAY
		JSR Hst_RecvByte
		PLA
		TAY
		RTS

GetSync 	SEI				;965c
		#MoveB TURBO_DD00, cia2base
GetSync0	#bbrf 7, cia2base, GetSync0
		RTS

__EnterTurbo					;9668
		LDA curDrive
		JSR SetDevice
		LDX curDrive
		LDA _turboFlags,x
		BMI EntTur0
		JSR SendCODE
		#bnex EntTur5
		LDX curDrive
		LDA #%10000000
		STA _turboFlags,x
EntTur0 	AND #%01000000			;9684
		BNE EntTur3
		JSR InitForIO
		LDX #>EnterCommand
		LDA #<EnterCommand
		JSR SendDOSCmd
		#bnex EntTur4
		JSR $ffae
		SEI
		LDY #$21
EntTur1 	DEY				;969b
		BNE EntTur1
		JSR Hst_RecvByte_3
EntTur2 	#bbsf 7, cia2base, EntTur2	;96a1
		JSR DoneWithIO
		LDX curDrive
		LDA _turboFlags,x
		ORA #%01000000
		STA _turboFlags,x
EntTur3 	LDX #0				;96b4
		BEQ EntTur5
EntTur4 	JSR DoneWithIO			;96b8
EntTur5 	RTS				;96bb

EnterCommand	.text "M-E"			;96bc
		.word DriveStart

SendExitTurbo	JSR InitForIO			;96c1
		LDX #>Drv_ExitTurbo
		LDA #<Drv_ExitTurbo
		JSR DUNK4
		JSR GetSync
		LDA curDrive
		JSR $ffb1
		LDA #$ef
		JSR $ff93
		JSR $ffae
		JMP DoneWithIO

SendCODE	JSR InitForIO			;96df
		LDA #>DriveCode
		STA z8e
		LDA #<DriveCode
		STA z8d
		LDA #>DriveAddy
		STA WriteAddy+1
		LDA #<DriveAddy
		STA WriteAddy
	#LoadB z8f, $1b
SndCDE0 	JSR SendCHUNK			;96f8
		#bnex SndCDE1
		CLC
		LDA #$20
		ADC z8d
		STA z8d
		BCC *+4
		INC z8e
		CLC
		LDA #$20
		ADC WriteAddy
		STA WriteAddy
		BCC *+5
		INC WriteAddy+1
		DEC z8f
		BPL SndCDE0
SndCDE1 	JMP DoneWithIO			;971b

SendCHUNK	LDA z8f 			;971e
		ORA NUMDRV
		BEQ SndCHNK1
		LDX #>WriteCommand
		LDA #<WriteCommand
		JSR SendDOSCmd
		#bnex SndCHNK2
		LDA #$20
		JSR $ffa8
		LDY #0
SndCHNK0	LDA (z8d),y			;9736
		JSR $ffa8
		INY
		CPY #$20
		BCC SndCHNK0
		JSR $ffae
SndCHNK1	LDX #0				;9743
SndCHNK2	RTS				;9745

WriteCommand	.text "M-W"			;9746
WriteAddy	.word $0300			;9749

__ExitTurbo					;974b
		TXA
		PHA
		LDX curDrive
		LDA _turboFlags,x
		AND #%01000000
		BEQ ExiTur0
		JSR SendExitTurbo
		LDX curDrive
		LDA _turboFlags,x
		AND #%10111111
		STA _turboFlags,x
ExiTur0 	PLA				;9765
		TAX
		RTS

__PurgeTurbo					;9768
		JSR ClearCache
		JSR ExitTurbo
PurTur0 	LDY curDrive			;976e
		LDA #0
		STA _turboFlags,y
		RTS

__NewDisk					;9777
		JSR EnterTurbo
		#bnex NewDsk2
		JSR ClearCache
		JSR InitForIO
		LDA #0
		STA errCount
NewDsk0 	LDA #>Drv_NewDisk		;9788
		STA z8c
		LDA #<Drv_NewDisk
		STA z8b
		JSR DUNK4_2
		JSR GetDOSError
		BEQ NewDsk1
		INC errCount
		CPY errCount
		BEQ NewDsk1
		BCS NewDsk0
NewDsk1 	JSR DoneWithIO			;97a2
NewDsk2 	RTS				;97a5

__ChangeDiskDevice				;97a6
		PHA
		JSR EnterTurbo
		#bnex ChngDskDv0
		PLA
		PHA
		ORA #%00100000
		STA r1L
		JSR InitForIO
		LDX #>Drv_ChngDskDev
		LDA #<Drv_ChngDskDev
		JSR DUNK4_1
		JSR DoneWithIO
		JSR PurTur0
		PLA
		TAX
		LDA #%11000000
		STA _turboFlags,x
		STX curDrive
		STX curDevice
		LDX #0
		RTS
ChngDskDv0	PLA				;97d2
		RTS

__ReadBlock					;97d4
_ReadLink
		JSR DUNK1_1
		BCC RdBlock2
		#bbrf 6, curType, RdBLock0
		JSR DoCacheRead
		BNE RdBlock2
RdBlock0	LDX #>Drv_ReadSec		;97e3
		LDA #<Drv_ReadSec
		JSR DUNK4_1
		LDX #>Drv_SendByte
		LDA #<Drv_SendByte
		JSR DUNK4
		#MoveW r4, z8b
		LDY #0
		JSR Hst_RecvByte
		JSR GetDError
		#beqx RdBlock1
		INC errCount
		CPY errCount
		BEQ RdBlock1
		BCS RdBlock0
RdBlock1	#bnex RdBlock2			;980e
		#bbrf 6, curType, RdBlock2
		JSR DoCacheWrite
		#bra RdBlock2
RdBlock2	LDY #0				;981c
		RTS

__WriteBlock					;981f
		JSR DUNK1
		BCC WrBlock2
WrBlock1	LDX #>Drv_WriteSec		;9824
		LDA #<Drv_WriteSec
		JSR DUNK4_1
		#MoveW r4, z8b
		LDY #0
		JSR Hst_SendByte
		JSR GetDOSError
		BEQ WrBlock2
		INC errCount
		CPY errCount
		BEQ WrBlock2
		BCS WrBlock1
WrBlock2	RTS				;9847

__VerWriteBlock 				;9848
		JSR DUNK1
		BCC VWrBlock3
VWrBlock0	LDA #3				;984d
		STA tryCount
VWrBlock1	LDX #>Drv_ReadSec		;9852
		LDA #<Drv_ReadSec
		JSR DUNK4_1
		JSR GetDOSError
		#beqx VWrBlock2
		DEC tryCount
		BNE VWrBlock1
		LDX #$25
		INC errCount
		LDA errCount
		CMP #5
		BEQ VWrBlock2
		PHA
		JSR WriteBlock
		PLA
		STA errCount
		#beqx VWrBlock0
VWrBlock2	#bnex VWrBlock3 		;987b
		#bbrf 6, curType, VWrBlock3
		JMP DoCacheWrite
VWrBlock3	RTS				;9886

GetDOSError	LDX #>Drv_SendByte_0		;9887
		LDA #<Drv_SendByte_0
		JSR DUNK4
GetDError	LDA #>errStore			;988e
		STA z8c
		LDA #<errStore
		STA z8b
		JSR DUNK5
		LDA errStore
		PHA
		TAY
		LDA DOSErrTab-1,y
		TAY
		PLA
		CMP #1
		BEQ GetDErr1
		#addv $1e
		BNE GetDErr2
GetDErr1	LDA #0				;98ac
GetDErr2	TAX				;98ae
		RTS

DOSErrTab	.byte $01, $05, $02, $08	;98b0
		.byte $08, $01, $05, $01
		.byte $05, $05, $05

DriveCode					;98bb
		.logical DriveAddy

DNibbleTab	.byte $0f, $07, $0d, $05	;0300
		.byte $0b, $03, $09, $01
		.byte $0e, $06, $0c, $04
		.byte $0a, $02, $08, $00
						;0310
DNibbleTab2	.byte $00, $80, $20, $a0
		.byte $40, $c0, $60, $e0
		.byte $10, $90, $30, $b0
		.byte $50, $d0, $70, $f0
						;0320
Drv_SendByte	LDY #0
		JSR Drv_SendByte_1
Drv_SendByte_0	LDY #0				;0325
		STY $73
		STY $74
		INY
		STY $71
		LDY #0
		JSR D_DUNK4_1
		LDA $71
		JSR Drv_SendByte_3
		LDY $71
Drv_SendByte_1	JSR D_DUNK4_1			;033a
Drv_SendByte_2	DEY				;033d
		LDA ($73),y
Drv_SendByte_3	TAX				;0340
		LSR A
		LSR A
		LSR A
		LSR A
		STA $70
		TXA
		AND #%00001111
		TAX
		LDA #4
		STA $1800
		BIT $1800
		BEQ *-3
		BIT $1800
		BNE *+2
		BNE *+2
		STX $1800
		TXA
		ROL A
		AND #%00001111
		STA $1800
		LDX $70
		LDA DNibbleTab,x
		STA $1800
		NOP
		ROL A
		AND #%00001111
		CPY #0
		STA $1800
		BNE Drv_SendByte_2
		BEQ Drv_RecvByte_2

Drv_RecvWord	LDY #1				;037b
		JSR Drv_RecvByte
		STA $71
		TAY
		JSR Drv_RecvByte
		LDY $71
		RTS

Drv_RecvByte	JSR D_DUNK4_1			;0389
Drv_RecvByte_1	PHA				;038c
		PLA
		LDA #4
		BIT $1800
		BEQ *-3
		NOP
		NOP
		NOP
		LDA $1800
		ASL A
		NOP
		NOP
		NOP
		NOP
		ORA $1800
		AND #%00001111
		TAX
		NOP
		NOP
		NOP
		LDA $1800
		ASL A
		PHA
		LDA $70
		PLA
		ORA $1800
		AND #%00001111
		ORA DNibbleTab2,x
		DEY
		STA ($73),y
		BNE Drv_RecvByte_1
Drv_RecvByte_2	LDX #2				;03be
		STX $1800
		RTS

D_DUNK4 	DEC $48 			;03c4
		BNE D_DUNK4_1
		JSR D_DUNK8_2
D_DUNK4_1	#LoadB $1805, $c0		;03cb
D_DUNK4_2	#bbrf 7, $1805, D_DUNK4 	;03d0
		LDA #4
		BIT $1800
		BNE D_DUNK4_2
		#LoadB $1800, 0
		RTS

DriveStart	PHP				;03e2
		SEI
		#PushB $49
		LDA $180f
		AND #%11011111
		STA $180f
		LDY #0
		DEY
		BNE *-1
		JSR Drv_RecvByte_2
		LDA #4
		BIT $1800
		BEQ *-3
DriveLoop	JSR D_DUNK8			;03fe
		LDA #>DExecAddy
		STA $74
		LDA #<DExecAddy
		STA $73
		JSR Drv_RecvWord
		JSR D_DUNK8_1
		#LoadW $73, $0700
		LDA #>(DriveLoop-1)
		PHA
		LDA #<(DriveLoop-1)
		PHA
		JMP (DExecAddy)

Drv_ExitTurbo	JSR D_DUNK4_1			;0420
		#LoadB $33, 0
		STA $1800
		JSR $f98f
		#LoadB $1c0c, $ec
		PLA
		PLA
		#PopB $49
		PLP
		RTS

Drv_ChngDskDev	LDA DDatas			;0439
		STA $77
		EOR #$60
		STA $78
		RTS

D_DUNK5 	JSR D_DUNK12			;0443
		LDA $22
		BEQ D_DUNK5_1
		LDX $00
		DEX
		BEQ D_DUNK5_2
D_DUNK5_1	#PushB $12			;044f
		#PushB $13
		JSR Drv_NewDisk_1
		#PopB $13
		TAX
		#PopB $12
		LDY $00
		CPY #$01
		BNE D_DUNK5_41
		CPX $17
		BNE D_DUNK5_5
		CMP $16
		BNE D_DUNK5_5
		LDA #0
D_DUNK5_2	PHA				;046f
		LDA $22
		LDX #$ff
		SEC
		SBC DDatas
		BEQ D_DUNK5_4
		BCS D_DUNK5_3
		EOR #$ff
		ADC #1
		LDX #1
D_DUNK5_3	JSR D_DUNK6			;0482
		LDA DDatas
		STA $22
		JSR Drv_NewDisk_6
D_DUNK5_4	PLA				;048d
D_DUNK5_41	RTS				;048e
D_DUNK5_5	#LoadB $00, $0b 		;048f
		RTS

D_DUNK6 	STX $4a 			;0494
		ASL A
		TAY
		LDA $1c00
		AND #$fe
		STA $70
		LDA #$1e
		STA $71
D_DUNK6_1	LDA $70 			;04a3
		#add $4a
		EOR $70
		AND #%00000011
		EOR $70
		STA $70
		STA $1c00
		LDA $71
		JSR D_DUNK6_4
		LDA $71
		CPY #5
		BCC D_DUNK6_2
		CMP #$11
		BCC D_DUNK6_3
		SBC #2
		BNE D_DUNK6_3
D_DUNK6_2	CMP #$1c			;04c6
		BCS D_DUNK6_3
		ADC #4
D_DUNK6_3	STA $71 			;04cc
		DEY
		BNE D_DUNK6_1
		LDA #$4b
D_DUNK6_4	STA $1805			;04d3
		LDA $1805
		BNE *-3
		RTS

Drv_NewDisk 	JSR D_DUNK12			;04dc
Drv_NewDisk_1	LDX $00 			;04df
		DEX
		BEQ Drv_NewDisk_2
		LDX #$ff
		LDA #$01
		JSR D_DUNK6
		LDX #$01
		TXA
		JSR D_DUNK6
		LDA #$ff
		JSR D_DUNK6_4
Drv_NewDisk_2	#LoadB $70, $04 		;04f6
Drv_NewDisk_3	JSR D_DUNK11			;04fa
		LDX $18
		STX $22
		LDY $00
		DEY
		BEQ Drv_NewDisk_5
		DEC $70
		BMI Drv_NewDisk_4
		LDX $70
		JSR Drv_NewDisk_7
		SEC
		BCS Drv_NewDisk_3
Drv_NewDisk_4	#LoadB $22, 0			;0512
		RTS
Drv_NewDisk_5	TXA				;0517
Drv_NewDisk_6	JSR $f24b			;0518
		STA $43
Drv_NewDisk_7	LDA $1c00			;051d
		AND #$9f
		ORA DTrackTab,x
Drv_NewDisk_8	STA $1c00			;0525
		RTS

D_DUNK8 	LDA #$f7			;0529
		BNE D_DUNK8_3
D_DUNK8_1	LDA #$08			;052d
		ORA $1c00
		BNE Drv_NewDisk_8
D_DUNK8_2	#LoadB $20, 0			;0534
		#LoadB $3e, $ff
		LDA #$fb
D_DUNK8_3	AND $1c00			;053e
		JMP Drv_NewDisk_8

DTrackTab	.byte $00, $20, $40, $60	;0544

D_DUNK9 	TAX				;0548
		#bbrf 7, $20, D_DUNK9_0
		JSR D_DUNK12_1
		#LoadB $20, $20
		LDX #0
D_DUNK9_0	CPX $22 			;0556
		BEQ D_DUNK9_1
		JSR Drv_NewDisk_2
		CMP #1
		BNE D_DUNK9_1
		LDY $19
		INY
		CPY $43
		BCC *+4
		LDY #0
		STY $19
		#LoadB $45, 0
		#LoadW $32, $0018
		JSR D_DUNK11_1
D_DUNK9_1	RTS				;057b

Drv_WriteSec	JSR D_DUNK5			;057c
		LDX $00
		DEX
		BNE D_DUNK10_1
		JSR D_DUNK9
D_DUNK10_1	JSR Drv_RecvWord		;0587
		LDA #$10
		BNE D_DUNK10_2
Drv_ReadSec	JSR D_DUNK5			;058e
		LDA #0
D_DUNK10_2	LDX $00 			;0593
		DEX
		BEQ D_DUNK11_0
		RTS

D_DUNK11	LDA #$30			;0599
D_DUNK11_0	STA $45 			;059b
		LDA #>DDatas
		STA $33
		LDA #<DDatas
		STA $32
D_DUNK11_1	#LoadB $31, 7			;05a5
		TSX
		STX $49
		LDX #1
		STX $00
		DEX
		STX $3f
		#LoadB $1c0c, $ee
		LDA $45
		CMP #$10
		BEQ D_DUNK11_3
		CMP #$30
		BEQ D_DUNK11_2
		JMP $f4ca
D_DUNK11_2	JMP $f3b1			;05c5
D_DUNK11_3	JSR $f5e9			;05c8
		STA $3a
		LDA $1c00
		AND #$10
		BNE D_DUNK11_4
		LDA #$08
		BNE D_DUNK11_9
D_DUNK11_4	JSR $f78f			;05d8
		JSR $f510
		LDX #9
D_DUNK11_5	BVC D_DUNK11_5			;05e0
		CLV
		DEX
		BNE D_DUNK11_5
		LDA #$ff
		STA $1c03
		LDA $1c0c
		AND #$1f
		ORA #$c0
		STA $1c0c
		LDA #$ff
		LDX #5
		STA $1c01
		CLV
D_DUNK11_6	BVC D_DUNK11_6			;05fd
		CLV
		DEX
		BNE D_DUNK11_6
		LDY #$bb
D_DUNK11_7	LDA $0100,y			;0605
		BVC *
		CLV
		STA $1c01
		INY
		BNE D_DUNK11_7
D_DUNK11_8	LDA ($30),y			;0611
		BVC *
		CLV
		STA $1c01
		INY
		BNE D_DUNK11_8
		BVC *
		LDA $1c0c
		ORA #$e0
		STA $1c0c
		#LoadB $1c03, 0
		STA $50
		LDA #1
D_DUNK11_9	STA $00 			;062f
		RTS

D_DUNK12	LDA $20 			;0632
		AND #$20
		BNE D_DUNK12_3
		JSR $f97e
D_DUNK12_1	LDY #$80			;063b
D_DUNK12_2	DEX				;063d
		BNE D_DUNK12_2
		DEY
		BNE D_DUNK12_2
		STY $3e
D_DUNK12_3	#LoadB $48, $ff 		;0645
		RTS

DExecAddy	.word 0 			;064a
DDatas		;.word 0 			;064c
;064c
		.here

ClrCacheDat	.word 0				;9c07

ClearCache	#bbsf 6, curType, DoClearCache	;9c09
		RTS
DoClearCache	#LoadW r0, ClrCacheDat		;9c0f
		LDY #0
		STY r1L
		STY r1H
		STY r2H
		INY
		INY
		STY r2L
		INY
		STY r3H
		LDY curDrive
		LDA driveData,y
		STA r3L
DoClrCache1	JSR StashRAM			;9c2e
		INC r1H
		BNE DoClrCache1
		INC r3L
		DEC r3H
		BNE DoClrCache1
		RTS

DoCacheRead	LDY #%10010001			;9c3c
		JSR DoCacheDisk
		LDY #0
		LDA (r4),y
		INY
		ORA (r4),y
		RTS

GiveNoError	LDX #0				;9c49
		RTS

DoCacheVerify	LDY #%10010011			;9c4c
		JSR DoCacheDisk
		AND #$20
		RTS

DoCacheWrite	LDY #%10010000			;9c54
DoCacheDisk	#PushW r0			;9c56
		#PushW r1
		#PushW r2
		#PushB r3L
		TYA
		PHA
		LDY r1L
		DEY
		LDA CacheTabL,y
		#add r1H
		STA r1H
		LDA CacheTabH,y
		LDY curDrive
		ADC driveData,y
		STA r3L
		LDY #0
		STY r1L
		STY r2L
		INY
		STY r2H
		#MoveW r4, r0
		PLA
		TAY
		JSR DoRAMOp
		TAX
		#PopB r3L
		#PopW r2
		#PopW r1
		#PopW r0
		TXA
		LDX #0
		RTS

CacheTabL					;9cb3
		.byte $00, $15, $2a, $3f, $54, $69, $7e, $93
		.byte $a8, $bd, $d2, $e7, $fc, $11, $26, $3b
		.byte $50, $65, $78, $8b, $9e, $b1, $c4, $d7
		.byte $ea, $fc, $0e, $20, $32, $44, $56, $67
		.byte $78, $89, $9a, $ab
CacheTabH					;9cd7
		.byte $00, $00, $00, $00, $00, $00, $00, $00
		.byte $00, $00, $00, $00, $00, $01, $01, $01
		.byte $01, $01, $01, $01, $01, $01, $01, $01
		.byte $01, $01, $02, $02, $02, $02, $02, $02
		.byte $02, $02, $02, $02

tmpclkreg	.byte 0				;9cfb
tmpPS		.byte 0				;9cfc
tmpgrirqen	.byte 0				;9cfd
tmpCPU_DATA	.byte 0				;9cfe
tmpmobenble	.byte 0				;9cff
		.byte 0				;9d00
DExeProc	.word 0				;9d01
DTrkSec		.word 0				;9d03
tmpDD00		.byte 0				;9d05
tmpDD00_2	.byte 0				;9d06
errCount	.byte 0				;9d07
errStore	.byte 0				;9d08
tryCount	.byte 0				;9d09
borderFlag	.byte 0				;9d0a